/*
 * This file is generated by jOOQ.
 */
package trash.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import org.jooq.types.ULong;


/**
 * 시설물 승인 이력 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class FacilityApprovalHistory implements Serializable {

    private static final long serialVersionUID = 1L;

    private final ULong fcltyAprvHstId;
    private final ULong fcltyId;
    private final String fcltyAprvSta;
    private final LocalDateTime creDtm;

    public FacilityApprovalHistory(FacilityApprovalHistory value) {
        this.fcltyAprvHstId = value.fcltyAprvHstId;
        this.fcltyId = value.fcltyId;
        this.fcltyAprvSta = value.fcltyAprvSta;
        this.creDtm = value.creDtm;
    }

    public FacilityApprovalHistory(
        ULong fcltyAprvHstId,
        ULong fcltyId,
        String fcltyAprvSta,
        LocalDateTime creDtm
    ) {
        this.fcltyAprvHstId = fcltyAprvHstId;
        this.fcltyId = fcltyId;
        this.fcltyAprvSta = fcltyAprvSta;
        this.creDtm = creDtm;
    }

    /**
     * Getter for
     * <code>spotfinder.FACILITY_APPROVAL_HISTORY.FCLTY_APRV_HST_ID</code>. 시설물
     * 승인 이력 ID
     */
    public ULong getFcltyAprvHstId() {
        return this.fcltyAprvHstId;
    }

    /**
     * Getter for <code>spotfinder.FACILITY_APPROVAL_HISTORY.FCLTY_ID</code>.
     * 시설물 ID
     */
    public ULong getFcltyId() {
        return this.fcltyId;
    }

    /**
     * Getter for
     * <code>spotfinder.FACILITY_APPROVAL_HISTORY.FCLTY_APRV_STA</code>. 승인 상태
     */
    public String getFcltyAprvSta() {
        return this.fcltyAprvSta;
    }

    /**
     * Getter for <code>spotfinder.FACILITY_APPROVAL_HISTORY.CRE_DTM</code>.
     */
    public LocalDateTime getCreDtm() {
        return this.creDtm;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FacilityApprovalHistory other = (FacilityApprovalHistory) obj;
        if (this.fcltyAprvHstId == null) {
            if (other.fcltyAprvHstId != null)
                return false;
        }
        else if (!this.fcltyAprvHstId.equals(other.fcltyAprvHstId))
            return false;
        if (this.fcltyId == null) {
            if (other.fcltyId != null)
                return false;
        }
        else if (!this.fcltyId.equals(other.fcltyId))
            return false;
        if (this.fcltyAprvSta == null) {
            if (other.fcltyAprvSta != null)
                return false;
        }
        else if (!this.fcltyAprvSta.equals(other.fcltyAprvSta))
            return false;
        if (this.creDtm == null) {
            if (other.creDtm != null)
                return false;
        }
        else if (!this.creDtm.equals(other.creDtm))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.fcltyAprvHstId == null) ? 0 : this.fcltyAprvHstId.hashCode());
        result = prime * result + ((this.fcltyId == null) ? 0 : this.fcltyId.hashCode());
        result = prime * result + ((this.fcltyAprvSta == null) ? 0 : this.fcltyAprvSta.hashCode());
        result = prime * result + ((this.creDtm == null) ? 0 : this.creDtm.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FacilityApprovalHistory (");

        sb.append(fcltyAprvHstId);
        sb.append(", ").append(fcltyId);
        sb.append(", ").append(fcltyAprvSta);
        sb.append(", ").append(creDtm);

        sb.append(")");
        return sb.toString();
    }
}
