plugins {
    id 'java-library'
    id 'nu.studer.jooq' version '9.0'
}

bootJar.enabled = false
jar.enabled = true

dependencies {
    api 'org.springframework.boot:spring-boot-starter-security'
    api 'org.springframework.boot:spring-boot-starter-jooq'
    api 'org.springframework.boot:spring-boot-configuration-processor:3.2.4'

    jooqGenerator 'com.mysql:mysql-connector-j'

    // Jwt
    api 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    testImplementation 'org.springframework.security:spring-security-test'
}

jooq {
    version = dependencyManagement.importedProperties['jooq.version']
    edition = nu.studer.gradle.jooq.JooqEdition.OSS  // default (can be omitted)

    configurations {
        main {  // name of the jOOQ configuration
            generateSchemaSourceOnCompilation = false  // default (can be omitted)

            generationTool {
                logging = org.jooq.meta.jaxb.Logging.DEBUG
                jdbc {
                    driver = 'com.mysql.jdbc.Driver'
                    url = 'jdbc:mysql://localhost:3306/trash'
                    user = 'root'
                    password = '1234'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.mysql.MySQLDatabase'
                        inputSchema = 'trash'
                        forcedTypes {
                            forcedType {
                                name = 'varchar'
                                includeExpression = '.*'
                                includeTypes = 'JSONB?'
                            }
                            forcedType {
                                name = 'varchar'
                                includeExpression = '.*'
                                includeTypes = 'INET'
                            }
                        }
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                    }
                    target {
                        packageName = 'trash'
                        directory = 'src/main/java/com/project/trash/common/domain/jooq'  // default (can be omitted)
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}