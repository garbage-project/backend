/*
 * This file is generated by jOOQ.
 */
package trash.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import org.jooq.types.ULong;


/**
 * 시설물 이미지 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class FacilityImage implements Serializable {

    private static final long serialVersionUID = 1L;

    private final ULong fcltyImgId;
    private final String fcltyImgPath;
    private final ULong fcltyId;
    private final LocalDateTime creDtm;

    public FacilityImage(FacilityImage value) {
        this.fcltyImgId = value.fcltyImgId;
        this.fcltyImgPath = value.fcltyImgPath;
        this.fcltyId = value.fcltyId;
        this.creDtm = value.creDtm;
    }

    public FacilityImage(
        ULong fcltyImgId,
        String fcltyImgPath,
        ULong fcltyId,
        LocalDateTime creDtm
    ) {
        this.fcltyImgId = fcltyImgId;
        this.fcltyImgPath = fcltyImgPath;
        this.fcltyId = fcltyId;
        this.creDtm = creDtm;
    }

    /**
     * Getter for <code>spotfinder.FACILITY_IMAGE.FCLTY_IMG_ID</code>. 이미지 ID
     */
    public ULong getFcltyImgId() {
        return this.fcltyImgId;
    }

    /**
     * Getter for <code>spotfinder.FACILITY_IMAGE.FCLTY_IMG_PATH</code>. 이미지 경로
     */
    public String getFcltyImgPath() {
        return this.fcltyImgPath;
    }

    /**
     * Getter for <code>spotfinder.FACILITY_IMAGE.FCLTY_ID</code>. 시설물 ID
     */
    public ULong getFcltyId() {
        return this.fcltyId;
    }

    /**
     * Getter for <code>spotfinder.FACILITY_IMAGE.CRE_DTM</code>. 등록일시
     */
    public LocalDateTime getCreDtm() {
        return this.creDtm;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FacilityImage other = (FacilityImage) obj;
        if (this.fcltyImgId == null) {
            if (other.fcltyImgId != null)
                return false;
        }
        else if (!this.fcltyImgId.equals(other.fcltyImgId))
            return false;
        if (this.fcltyImgPath == null) {
            if (other.fcltyImgPath != null)
                return false;
        }
        else if (!this.fcltyImgPath.equals(other.fcltyImgPath))
            return false;
        if (this.fcltyId == null) {
            if (other.fcltyId != null)
                return false;
        }
        else if (!this.fcltyId.equals(other.fcltyId))
            return false;
        if (this.creDtm == null) {
            if (other.creDtm != null)
                return false;
        }
        else if (!this.creDtm.equals(other.creDtm))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.fcltyImgId == null) ? 0 : this.fcltyImgId.hashCode());
        result = prime * result + ((this.fcltyImgPath == null) ? 0 : this.fcltyImgPath.hashCode());
        result = prime * result + ((this.fcltyId == null) ? 0 : this.fcltyId.hashCode());
        result = prime * result + ((this.creDtm == null) ? 0 : this.creDtm.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FacilityImage (");

        sb.append(fcltyImgId);
        sb.append(", ").append(fcltyImgPath);
        sb.append(", ").append(fcltyId);
        sb.append(", ").append(creDtm);

        sb.append(")");
        return sb.toString();
    }
}
