/*
 * This file is generated by jOOQ.
 */
package trash.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import org.jooq.types.ULong;


/**
 * 신고 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Report implements Serializable {

    private static final long serialVersionUID = 1L;

    private final ULong rptId;
    private final ULong fcltyId;
    private final ULong mbrId;
    private final String rptCtt;
    private final String rptAns;
    private final String rptSttYn;
    private final LocalDateTime creDtm;
    private final LocalDateTime updDtm;

    public Report(Report value) {
        this.rptId = value.rptId;
        this.fcltyId = value.fcltyId;
        this.mbrId = value.mbrId;
        this.rptCtt = value.rptCtt;
        this.rptAns = value.rptAns;
        this.rptSttYn = value.rptSttYn;
        this.creDtm = value.creDtm;
        this.updDtm = value.updDtm;
    }

    public Report(
        ULong rptId,
        ULong fcltyId,
        ULong mbrId,
        String rptCtt,
        String rptAns,
        String rptSttYn,
        LocalDateTime creDtm,
        LocalDateTime updDtm
    ) {
        this.rptId = rptId;
        this.fcltyId = fcltyId;
        this.mbrId = mbrId;
        this.rptCtt = rptCtt;
        this.rptAns = rptAns;
        this.rptSttYn = rptSttYn;
        this.creDtm = creDtm;
        this.updDtm = updDtm;
    }

    /**
     * Getter for <code>spotfinder.REPORT.RPT_ID</code>. 신고 ID
     */
    public ULong getRptId() {
        return this.rptId;
    }

    /**
     * Getter for <code>spotfinder.REPORT.FCLTY_ID</code>. 시설물 ID
     */
    public ULong getFcltyId() {
        return this.fcltyId;
    }

    /**
     * Getter for <code>spotfinder.REPORT.MBR_ID</code>. 회원 ID
     */
    public ULong getMbrId() {
        return this.mbrId;
    }

    /**
     * Getter for <code>spotfinder.REPORT.RPT_CTT</code>. 신고 내용
     */
    public String getRptCtt() {
        return this.rptCtt;
    }

    /**
     * Getter for <code>spotfinder.REPORT.RPT_ANS</code>. 답변
     */
    public String getRptAns() {
        return this.rptAns;
    }

    /**
     * Getter for <code>spotfinder.REPORT.RPT_STT_YN</code>. 신고 처리상태
     */
    public String getRptSttYn() {
        return this.rptSttYn;
    }

    /**
     * Getter for <code>spotfinder.REPORT.CRE_DTM</code>. 등록일시
     */
    public LocalDateTime getCreDtm() {
        return this.creDtm;
    }

    /**
     * Getter for <code>spotfinder.REPORT.UPD_DTM</code>. 수정일시
     */
    public LocalDateTime getUpdDtm() {
        return this.updDtm;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Report other = (Report) obj;
        if (this.rptId == null) {
            if (other.rptId != null)
                return false;
        }
        else if (!this.rptId.equals(other.rptId))
            return false;
        if (this.fcltyId == null) {
            if (other.fcltyId != null)
                return false;
        }
        else if (!this.fcltyId.equals(other.fcltyId))
            return false;
        if (this.mbrId == null) {
            if (other.mbrId != null)
                return false;
        }
        else if (!this.mbrId.equals(other.mbrId))
            return false;
        if (this.rptCtt == null) {
            if (other.rptCtt != null)
                return false;
        }
        else if (!this.rptCtt.equals(other.rptCtt))
            return false;
        if (this.rptAns == null) {
            if (other.rptAns != null)
                return false;
        }
        else if (!this.rptAns.equals(other.rptAns))
            return false;
        if (this.rptSttYn == null) {
            if (other.rptSttYn != null)
                return false;
        }
        else if (!this.rptSttYn.equals(other.rptSttYn))
            return false;
        if (this.creDtm == null) {
            if (other.creDtm != null)
                return false;
        }
        else if (!this.creDtm.equals(other.creDtm))
            return false;
        if (this.updDtm == null) {
            if (other.updDtm != null)
                return false;
        }
        else if (!this.updDtm.equals(other.updDtm))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.rptId == null) ? 0 : this.rptId.hashCode());
        result = prime * result + ((this.fcltyId == null) ? 0 : this.fcltyId.hashCode());
        result = prime * result + ((this.mbrId == null) ? 0 : this.mbrId.hashCode());
        result = prime * result + ((this.rptCtt == null) ? 0 : this.rptCtt.hashCode());
        result = prime * result + ((this.rptAns == null) ? 0 : this.rptAns.hashCode());
        result = prime * result + ((this.rptSttYn == null) ? 0 : this.rptSttYn.hashCode());
        result = prime * result + ((this.creDtm == null) ? 0 : this.creDtm.hashCode());
        result = prime * result + ((this.updDtm == null) ? 0 : this.updDtm.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Report (");

        sb.append(rptId);
        sb.append(", ").append(fcltyId);
        sb.append(", ").append(mbrId);
        sb.append(", ").append(rptCtt);
        sb.append(", ").append(rptAns);
        sb.append(", ").append(rptSttYn);
        sb.append(", ").append(creDtm);
        sb.append(", ").append(updDtm);

        sb.append(")");
        return sb.toString();
    }
}
