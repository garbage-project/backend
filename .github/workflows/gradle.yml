name: Java CI/CD with Gradle

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GIT_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Docker build
        run: docker build -t spotfinder-admin:latest -f trash-admin/Dockerfile .

      # AWS 자격증명
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ECR 로그인
      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ADMIN_ECR_REGISTRY_URI }}

      - name: Publish Image to ECR
        run: |
          docker tag spotfinder-admin:latest ${{ secrets.ADMIN_ECR_REGISTRY_URI }}:latest
          docker push ${{ secrets.ADMIN_ECR_REGISTRY_URI }}

      # EC2 Deploy
      - name: Deploy application using SSM
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --instance-ids "${{ secrets.ADMIN_EC2_INSTANCE_ID }}" \
            --parameters commands='[
              "aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ADMIN_ECR_REGISTRY_URI }}",
              "cd /root",
              "docker stop $(docker ps -a -q)",
              "docker rm $(docker ps -aq)",
              "docker rmi $(docker images -a -q)",
              "docker pull ${{ secrets.ADMIN_ECR_REGISTRY_URI }}:latest",
              "docker run -d -p 8080:8080 --name spotfinder-admin ${{ secrets.ADMIN_ECR_REGISTRY_URI }}:latest"
            ]' \
            --comment "Deploying Docker container"
