/*
 * This file is generated by jOOQ.
 */
package trash.tables.pojos;


import java.io.Serializable;


/**
 * 관리자 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Admin implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String admId;
    private final String admPwd;

    public Admin(Admin value) {
        this.admId = value.admId;
        this.admPwd = value.admPwd;
    }

    public Admin(
        String admId,
        String admPwd
    ) {
        this.admId = admId;
        this.admPwd = admPwd;
    }

    /**
     * Getter for <code>spotfinder.ADMIN.ADM_ID</code>. ID
     */
    public String getAdmId() {
        return this.admId;
    }

    /**
     * Getter for <code>spotfinder.ADMIN.ADM_PWD</code>. 비밀번호
     */
    public String getAdmPwd() {
        return this.admPwd;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Admin other = (Admin) obj;
        if (this.admId == null) {
            if (other.admId != null)
                return false;
        }
        else if (!this.admId.equals(other.admId))
            return false;
        if (this.admPwd == null) {
            if (other.admPwd != null)
                return false;
        }
        else if (!this.admPwd.equals(other.admPwd))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.admId == null) ? 0 : this.admId.hashCode());
        result = prime * result + ((this.admPwd == null) ? 0 : this.admPwd.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Admin (");

        sb.append(admId);
        sb.append(", ").append(admPwd);

        sb.append(")");
        return sb.toString();
    }
}
