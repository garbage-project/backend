/*
 * This file is generated by jOOQ.
 */
package trash.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Token implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String mbrId;
    private final String tknAcs;
    private final String tknRfrs;
    private final LocalDateTime creDtm;
    private final LocalDateTime updDtm;

    public Token(Token value) {
        this.mbrId = value.mbrId;
        this.tknAcs = value.tknAcs;
        this.tknRfrs = value.tknRfrs;
        this.creDtm = value.creDtm;
        this.updDtm = value.updDtm;
    }

    public Token(
        String mbrId,
        String tknAcs,
        String tknRfrs,
        LocalDateTime creDtm,
        LocalDateTime updDtm
    ) {
        this.mbrId = mbrId;
        this.tknAcs = tknAcs;
        this.tknRfrs = tknRfrs;
        this.creDtm = creDtm;
        this.updDtm = updDtm;
    }

    /**
     * Getter for <code>spotfinder.TOKEN.MBR_ID</code>. 회원 ID
     */
    public String getMbrId() {
        return this.mbrId;
    }

    /**
     * Getter for <code>spotfinder.TOKEN.TKN_ACS</code>. 엑세스 토큰
     */
    public String getTknAcs() {
        return this.tknAcs;
    }

    /**
     * Getter for <code>spotfinder.TOKEN.TKN_RFRS</code>. 리프레시 토큰
     */
    public String getTknRfrs() {
        return this.tknRfrs;
    }

    /**
     * Getter for <code>spotfinder.TOKEN.CRE_DTM</code>. 등록일시
     */
    public LocalDateTime getCreDtm() {
        return this.creDtm;
    }

    /**
     * Getter for <code>spotfinder.TOKEN.UPD_DTM</code>. 수정일시
     */
    public LocalDateTime getUpdDtm() {
        return this.updDtm;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Token other = (Token) obj;
        if (this.mbrId == null) {
            if (other.mbrId != null)
                return false;
        }
        else if (!this.mbrId.equals(other.mbrId))
            return false;
        if (this.tknAcs == null) {
            if (other.tknAcs != null)
                return false;
        }
        else if (!this.tknAcs.equals(other.tknAcs))
            return false;
        if (this.tknRfrs == null) {
            if (other.tknRfrs != null)
                return false;
        }
        else if (!this.tknRfrs.equals(other.tknRfrs))
            return false;
        if (this.creDtm == null) {
            if (other.creDtm != null)
                return false;
        }
        else if (!this.creDtm.equals(other.creDtm))
            return false;
        if (this.updDtm == null) {
            if (other.updDtm != null)
                return false;
        }
        else if (!this.updDtm.equals(other.updDtm))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.mbrId == null) ? 0 : this.mbrId.hashCode());
        result = prime * result + ((this.tknAcs == null) ? 0 : this.tknAcs.hashCode());
        result = prime * result + ((this.tknRfrs == null) ? 0 : this.tknRfrs.hashCode());
        result = prime * result + ((this.creDtm == null) ? 0 : this.creDtm.hashCode());
        result = prime * result + ((this.updDtm == null) ? 0 : this.updDtm.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Token (");

        sb.append(mbrId);
        sb.append(", ").append(tknAcs);
        sb.append(", ").append(tknRfrs);
        sb.append(", ").append(creDtm);
        sb.append(", ").append(updDtm);

        sb.append(")");
        return sb.toString();
    }
}
